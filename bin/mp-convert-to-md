#!/usr/bin/env lsc
# options are accessed as argv.option

_       = require('underscore')
_.str   = require('underscore.string');
moment  = require 'moment'
fs      = require 'fs'
color   = require('ansi-color').set
os      = require('os')
shelljs = require('shelljs')
table   = require('ansi-color-table')
ls      = require('LiveScript')
debug = require('debug')('mp-parse')
path = require('path')

_.mixin(_.str.exports());
_.str.include('Underscore.string', 'string');

name        = "mp-convert-to-md"
description = "converts custom script tags in markdown by external plugins. Generates markdown in output."
author      = "Vittorio Zaccaria"
year        = "2014"

info = (s) ->
  console.log color('inf', 'bold')+": #s"

err = (s) ->
  console.log color('err', 'red')+": #s"

warn = (s) ->
  console.log color('wrn', 'yellow')+": #s"

src = __dirname
otm = if (os.tmpdir?) then os.tmpdir() else "/var/tmp"
cwd = process.cwd()

setup-temporary-directory = ->
    name = "tmp_#{moment().format('HHmmss')}_tmp"
    dire = "#{otm}/#{name}" 
    shelljs.mkdir '-p', dire
    return dire

remove-temporary-directory = (dir) ->
    shelljs.rm '-rf', dir 
    
usage-string = """

#{color(name, \bold)}. #{description}
(c) #author, #year

Usage: #{name} [--option=V | -o V] file.md
"""

require! 'optimist'

argv     = optimist.usage(usage-string,
              pdf:
                alias: 'p', description: 'Use local pdf files', boolean: true, default: false

              png:
                alias: 'g', description: 'Use local png files', boolean: true, default: true

              svg:
                alias: 's', description: 'Use local svg files', boolean: true, default: false

              time:
                alias: 't', description: 'Use timestamp', boolean: true, default: false

              dboxurl:
                alias: 'u', description: 'Public dropbox URL', default: 'https://dl.dropboxusercontent.com/u/5867765/images'

              dbox:
                alias: 'x', description: 'Copy figures to dropbox', boolean: true, default: false

              help:
                alias: 'h', description: 'this help', default: false

              dir: 
                alias: 'd', description: 'figure directory', default: "#cwd/figures"

                         ).boolean(\h).argv

file = (argv._)[0]

ex = path.extname(file)

if(argv.help || not file? || not ex==".md")
  optimist.showHelp()
  return

file-bn = path.basename(file, ".md")
file-c = file-bn + "-0.md"

f = shelljs.cat(file)

metapost-regex = /<script metapost>(.|\n)*<\/script>/gi

fignum = 0

files = []

if argv.dbox
  argv.dir = "/Users/zaccaria/Dropbox/Public/images"

add-sfx = (s) ->
      | argv.pdf  => "#{s}.pdf"
      | argv.svg  => "#{s}.svg"
      | otherwise => "#{s}.png"

get-figname = ->

  pre = ""

  if argv.time 
    pre := moment().format('DDMMYY-HHmmss')
  else 
    pre := ""+fignum
    fignum := fignum + 1

  suffix      = "#{file-bn}mp#pre"
  local-file  = "#{argv.dir}/#suffix"
  remote-file = "#{argv.dboxurl}/#suffix"

  return { remote-file: remote-file, local-file: local-file, suffix: suffix }

parse-metapost = (code) ->
  code = code.replace('<script metapost>', '').replace('<\/script>','')
  code = "{ diagram, box-element, circle-element, empty-element, tex } = require('#src/../plugins/metapost');\n" + code
  { remote-file, local-file, suffix } = get-figname()
  mp = ls.run (code)
  genfile = "#local-file.mp"
  mp.to(genfile)
  files.push(genfile)
  if argv.dbox
    return "![](#{add-sfx remote-file})";
  else 
    return "![](#{add-sfx local-file})"

## Main 

shelljs.mkdir('-p', argv.dir)

f = f.replace metapost-regex, parse-metapost

f.to(file-c)

options = 
  | argv.pdf => ""
  | argv.svg => " -s "
  | otherwise => " -g "

for f in files 
  cmd = "cd #{argv.dir} && #src/mp-gen-pdf-figures #options #f"
  debug cmd
  shelljs.exec(cmd, ->)





