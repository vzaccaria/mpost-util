#!/usr/bin/env sh 
set -e

usage="
Usage: mp-gen-pdf-figures <input>.mp [-s] [-d]
converts an mpost file to a pdf file.

-s    Outputs an svg file 
-g    Outputs a png file
-d    Dry run; show only steps that will be done
"

# Absolute path:
# 
# Usage: abs=`get_abs_path ./deploy/static`
#		 echo $abs
# 
function get_abs_path {
   dir=$(cd `dirname $1` >/dev/null; pwd )
   echo $dir
}
#

# Get basename:
function get_base_name {
	n=$1
	n=$(basename "$n")
	echo "${n%.*}"
}


#if [ $? -eq 0 ]
#then
#    echo "it worked"
#else
#    echo "it failed"
#fi

# Source directory
#
realprg=`grealpath $0`
bindir=`dirname $realprg`
bindir=`cd $bindir; pwd`

#
# Temp directory:
#
# dstdir=`mktemp -d -t bashtmp`
#
# or current:
#
dstdir=`pwd`

function directory_does_exist {
	if [ ! -d "$1" ]; then
		echo 'true'
	else
		echo 'false'
	fi
}

bold=$(tput bold)
reset=$(tput sgr0)

verbose=false 
function print {
  if [[ $verbose == true ]] ; then
	   printf "${bold}$1${reset}. "
     echo ""
  fi
}

function ask_for_key {
	printf "Press [enter] to continue"
	read -s # suppress user input
	echo 
}


# dryrun
dry_run=false

run() {
  if [[ $verbose == true ]] ; then
    echo "$1"
  fi
  if [[ $dry_run == false ]] ; then
    eval "$1"
  fi
}

svg="no"
png="no"

while (($# > 0)) ; do
  option="$1"
  shift

  

  case "$option" in

    -h|--help)
      echo "$usage"
      exit
      ;;

    -d|--dry-run)      
      dry_run=true; 
      ;;

    -s|--svg)      
      svg="yes"; 
      ;;

    -g|--png)      
      png="yes"; 
      ;;

    -v|--verbose)      
      verbose="yes"; 
      ;;
 
    *.mp)
      filename="$option";
      ;;
    *)
       echo "Unknown option $option"
  esac
done

bn=`get_base_name \"${filename}\"`

bntmp="${bn}-tex"
tmp="${bn}-tex.mp"

mpoutput="${bntmp}.1"
tmpoutput="${bntmp}.log"
mpx="${bntmp}.mpx"
pdoutput="${bntmp}.pdf"
sdoutput="${bntmp}.svg"
gdoutput="${bntmp}-1.png"

run "cat $bindir/../scripts/prologue.mp \"${filename}\" > \"${bn}-tex.mp\""
print "Processing ${filename}"
run "mpost \"${bn}-tex.mp\""

print "Converting eps to pdf"
run "epstopdf ${mpoutput}"

print "Cleaning up"
run "rm ${bn}-tex.mp"
run "rm ${mpoutput}"
run "rm ${tmpoutput}"
run "rm ${mpx}"

if [[ "$svg" == "yes" ]]; then
    print "Converting eps to svg"
    run "pdf2svg ${pdoutput} ${sdoutput}"
    run "rm ${pdoutput}"
    run "mv ${sdoutput} ${bn}.svg"
    # Body
    else
      if [[ "$png" == "yes" ]]; then
          print "Converting eps to png"
          run "pdftocairo -png ${pdoutput} -transp -r 300"
          run "rm ${pdoutput}"
          run "mv ${gdoutput} ${bn}.png"
          # Body
          else      
            run "mv ${pdoutput} ${bn}.pdf"
      fi
fi




